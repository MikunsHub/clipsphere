Description: CloudFormation template for setting up VPC with public and private subnets.

Parameters:
  VpcCIDR:
    Description: CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16
  
  POSTGRES_USER:
    Description: Username for the Postgres instance master user
    Type: String
    NoEcho: true
  
  POSTGRES_PASSWORD:
    Description: Password for the Postgres master user
    Type: String
    NoEcho: true

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
  
  RDSSubnetGroup:
  Type: AWS::RDS::DBSubnetGroup
  Properties:
    DBSubnetGroupName: RDSSubnetGroup
    SubnetIds:
      - !Ref PrivateSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
  
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
  
  RDSEndpointService:
    Type: AWS::EC2::VPCEndpointService
    Properties:
      ServiceName: !Join [ ".", ["com.amazonaws.", !Ref AWS::Region, ".rds"] ]
      VpcId: !Ref VPC
      AcceptanceRequired: false

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: RDSSecurityGroup
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - FromPort: 5432
          IpProtocol: tcp
          CidrBlock: !GetAtt RDSEndpointService.Outputs.DnsName
          ToPort: 5432

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20 
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: MainPostgresInstance
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: postgres
      EngineVersion: "14.0"
      MasterUsername: !Ref POSTGRES_USER
      MasterUserPassword: !Ref POSTGRES_PASSWORD
      Port: 5432
      PubliclyAccessible: no 
      SecurityGroups:
        - !Ref RDSSecurityGroup

Outputs:
  VpcId:
    Description: The clipsphere project VPC that was created
    Value: !Ref VPC
  PublicSubnetId:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: Private Subnet ID
    Value: !Ref PrivateSubnet
  RDSInstanceEndpoint:
    Description: The DNS name of the RDS instance endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
  RDSInstanceIdentifier:
    Description: The identifier for the RDS instance
    Value: !Ref RDSInstance
